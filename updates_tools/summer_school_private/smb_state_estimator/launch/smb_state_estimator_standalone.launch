<?xml version="1.0" encoding="UTF-8"?> 
  
<launch>

  <!-- Set true for simulation -->
  <arg name="simulation" default="false"/>
  
  <!-- Set true for standalone -->
  <arg name="standalone" default="true"/>

  <!-- The output can either be screen, log or an empty string -->
  <arg name="output" default="screen"/>
  
  <!-- Terminal launch prefix -->
  <arg name="launch_prefix" default="nice -n -20"/>


  <arg name="load_description" default="true"/>

  <rosparam command="load" ns="smb_state_estimator" file="$(find smb_state_estimator)/config/publishers.yaml"/>
  <rosparam command="load" ns="smb_state_estimator" file="$(find smb_state_estimator)/config/subscribers.yaml"/>
  <rosparam command="load" ns="smb_state_estimator" file="$(find smb_state_estimator)/config/services.yaml"/>

  <group if="$(arg load_description)">
   <include file="$(find smb_description)/launch/load.launch">
     <arg name="simulation"         value="$(arg simulation)"/>
   </include>
  </group>

  <!-- Launch the state estimator -->
  <node name="smb_state_estimator"
  		pkg="smb_state_estimator"
  		type="smb_state_estimator_node"
  		output="$(arg output)"
  		launch-prefix="$(arg launch_prefix)">
    <param name="logger_prefix"                value="/state_estimator"/>
    <param name="time_step"                    value="0.0025"/>
    <param name="simulation"                   value="$(arg simulation)"/>
    <param name="standalone"                   value="$(arg standalone)"/>
    <param name="sync_slave_name"              value="smb_sync"/>
    <param name="sync_master_name"             value="smb_controller_sync"/>
    <param name="connect_imu"                value="false"/>
    <rosparam command="load" file="$(find smb_state_estimator)/config/parameters.yaml"/>
  </node>

  <!-- Launch the sensor fusion node -->
  <node name="smb_confusor" pkg="smb_confusor" type="smb_confusor" output="screen" />

  <!-- Load robot description for the robot state publisher. Simulation arg needs to be true to load the urdf with continuous wheel joints -->
  <arg name="description_name"                     default="smb_description_for_gazebo"/>
  <arg name="description_file"                     default="$(find smb_description)/urdf/smb_standalone.urdf.xacro"/>
  <include file="$(find smb_description)/launch/load.launch">
    <arg name="simulation"       value="true"/>
    <arg name="description_name" value="$(arg description_name)"/>
    <arg name="description_file" value="$(arg description_file)"/>
    <arg name="wheel_joint_type" value="continuous"/>
  </include>

  <!-- Launch robot state publisher -->
  <include file="$(find smb_tf_publisher)/launch/smb_tf_publisher.launch">
    <arg name="description_name" default="description_name"/>
    <!-- TF prefix -->
    <arg name="tf_prefix" default=""/>
    <!-- Joint state topic name -->
    <arg name="joint_states_topic" default="/state_estimator/joint_states"/>
    <!-- Namespace to run the nodes in -->
    <arg name="ns" default="smb_tf_publisher"/>
    <arg name="publish_frequency" default="100" />
    <!-- Topic of the smb state -->
    <arg name="smb_state_subscriber_name" default="/state_estimator/smb_state"/>
    <!-- Publish map transforms -->
    <arg name="publish_map_transforms" default="false"/>
  </include>

</launch>
