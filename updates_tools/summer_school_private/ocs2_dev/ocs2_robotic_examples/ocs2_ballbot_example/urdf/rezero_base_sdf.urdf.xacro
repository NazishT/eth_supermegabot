<?xml version="1.0"?>
<robot name="Rezero" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Rezero Base Macro -->
  <xacro:macro name="rezero_base">

    <!-- Include file for calculating inertia tensors -->
    <xacro:include filename="$(find ocs2_ballbot_example)/urdf/inertia_tensors.urdf.xacro"/>

    <!-- Global Parameters-->
    <xacro:property name="parameter_file" value="$(find ocs2_ballbot_example)/urdf/parameters/rezero_base_parameters.yaml"/>
    <xacro:property name="parameters" value="${load_yaml(parameter_file)}"/>
    <xacro:property name="base_params" value="${parameters['base']}"/>
    <xacro:property name="wheel_params" value="${parameters['wheel']}"/>
    <xacro:property name="ball_params" value="${parameters['ball']}"/>
    <xacro:property name="imu_params" value="${parameters['imu']}"/>

    <!-- PI -->
    <xacro:property name="PI" value="3.1415"/>

    <!-- Base Link Parameters -->

    <!-- length of the body -->
    <xacro:property name="l_b" value="${base_params['collision_body']['length']}"/>
    <!-- radius of the base link -->
    <xacro:property name="r_b" value="${base_params['collision_body']['radius']}"/>
    <!-- offset for collision body/visual of base -->
    <xacro:property name="base_offset_z" value="${base_params['collision_body']['z']}"/>
    <!-- mass of the base link-->
    <xacro:property name="m_b" value="${base_params['mass']}"/>

    <!-- Wheel Parameters -->

    <!-- length of the wheel -->
    <xacro:property name="l_w" value="${wheel_params['collision_body']['length']}"/>
    <!-- radius of the real world wheel -->
    <xacro:property name="r_w" value="${wheel_params['collision_body']['radius']}"/>
    <!-- radius of the gazebo wheel in order to eliminate potential contact between ball and wheels -->
    <xacro:property name="r_w_fake" value="${wheel_params['collision_body']['fake_radius']}"/>
    <!-- mass of the wheel-->
    <xacro:property name="m_w" value="${wheel_params['mass']}"/>

    <!-- Sphere Parameters -->

    <!-- sphere radius -->
    <xacro:property name="r_s" value="${ball_params['collision_body']['radius']}"/>
    <!-- sphere mass -->
    <xacro:property name="m_s" value="${ball_params['mass']}"/>

    <!-- Helper Parameters -->

    <xacro:property name="angle_wheels" value="${pi/4}"/>
    <xacro:property name="r_wheelring" value="${sin(angle_wheels)*(r_s+r_w)}"/>
    <xacro:property name="ball_z_pos" value="${ball_params['pose']['z']}"/>
    <xacro:property name="z_wheelring" value="${ball_z_pos+cos(angle_wheels)*(r_s+r_w)}"/>

    <!-- IMU Parameters -->
    <xacro:property name="l_imu" value="${imu_params['collision_body']['length']}"/> <!-- [m] -->
    <xacro:property name="w_imu" value="${imu_params['collision_body']['width']}"/> <!-- [m] -->
    <xacro:property name="h_imu" value="${imu_params['collision_body']['height']}"/> <!-- [m] -->
    <xacro:property name="m_imu" value="${imu_params['mass']}"/> <!-- [kg] -->

    <xacro:property name="imu_x_pos" value="${imu_params['pose']['x']}"/>
    <xacro:property name="imu_y_pos" value="${imu_params['pose']['y']}"/>
    <xacro:property name="imu_z_pos" value="${imu_params['pose']['z']}"/>
    <xacro:property name="imu_roll" value="${imu_params['pose']['roll']}"/>
    <xacro:property name="imu_pitch" value="${imu_params['pose']['pitch']}"/>
    <xacro:property name="imu_yaw" value="${imu_params['pose']['yaw']}"/>


    <!-- Color Parameters-->


    <!-- Macros -->

    <!-- Cylindrical inertia -->
    <xacro:macro name="inertia_cyl_z" params="mass length radius">
      <mass value="${mass}"/>
      <inertia ixx="${mass/12*(3*radius*radius+length*length)}" ixy="0.0" ixz="0.0"
               iyy="${mass/12*(3*radius*radius+length*length)}" iyz="0.0" izz="${mass*radius*radius/2}"/>
    </xacro:macro>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="number">
      <link name="wheel_${number}">
        <visual>
          <geometry>
            <cylinder length="${l_w}" radius="${r_w}"/>
          </geometry>
          <origin xyz="0 0 0"/>
          <material name="blue"/>
        </visual>
        <collision>
          <geometry>
            <cylinder length="${l_w}" radius="${r_w_fake}"/>
          </geometry>
          <origin xyz="0 0 0"/>
        </collision>
        <inertial>
          <xacro:inertia_cyl_z mass="${m_w}" length="${l_w}" radius="${r_w}"/>
          <origin xyz="0 0 0"/>
        </inertial>
      </link>
      <joint name="WHEEL_${number}" type="continuous">
        <parent link="dummy"/>
        <child link="wheel_${number}"/>
        <origin rpy="0 ${3*pi/4.0} ${2*pi/3*(number-1)}"
                xyz="${r_wheelring*cos(2*pi/3*(number-1))} ${r_wheelring*sin(2*pi/3*(number-1))} ${z_wheelring}"/>
        <axis xyz="0 0 1"/>
        <limit effort="40" velocity="15"/>
      </joint>
    </xacro:macro>


    <!-- Links -->

    <!-- Base Link -->
    <link name="base">
      <visual>
        <geometry>
          <cylinder length="${l_b}" radius="${r_b}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 ${base_offset_z}"/>
        <material name="white"/>
      </visual>
      <!-- <visual>
        <geometry>
          <mesh filename="package://ocs2_ballbot_example/urdf/meshes/complete_robot_june.dae"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 ${base_z_pos}"/>
        <material name="white"/>
      </visual> -->
      <collision>
        <geometry>
          <cylinder length="${l_b}" radius="${r_b}"/>
        </geometry>
        <origin rpy="0 0 0" xyz="0 0 ${base_offset_z}"/>
      </collision>
    </link>

    <gazebo reference="base">
      <selfCollide>true</selfCollide>
      <mu1 value="0.8"/>
      <material>Gazebo/White</material>
    </gazebo>

    <!-- Wheels -->
    <xacro:wheel number="1"/>
    <xacro:wheel number="2"/>
    <xacro:wheel number="3"/>


    <!-- Dummy (holding the base inertia) -->
    <link name="dummy">
      <inertial>
        <mass value="${m_b}"/>
        <xacro:inertia_cyl_z mass="${m_b}" length="${l_b}" radius="${r_b}"/>
        <!--      <inertia ixx="${base_params['inertia']['ixx']}"
                       ixy="${base_params['inertia']['ixy']}"
                       ixz="${base_params['inertia']['ixz']}"
                       iyy="${base_params['inertia']['iyy']}"
                       iyz="${base_params['inertia']['iyz']}"
                       izz="${base_params['inertia']['izz']}"/>-->
        <origin xyz="${base_params['com_position']['x']} ${base_params['com_position']['y']} ${base_params['com_position']['z']}"/>
      </inertial>
    </link>
    <joint name="dummy_joint" type="fixed">
      <parent link="base"/>
      <child link="dummy"/>
    </joint>

    <!-- Sphere -->
    <gazebo>
      <link name="sphere">
        <pose>0 0 ${ball_params['pose']['z']} 0 0 0</pose>

        <inertial>
          <mass>${m_s}</mass>
          <inertia>
            <ixx>${m_s*r_s*r_s/3*2}</ixx>
            <ixy>0.0</ixy>
            <ixz>0.0</ixz>
            <iyy>${m_s*r_s*r_s/3*2}</iyy>
            <iyz>0.0</iyz>
            <izz>${m_s*r_s*r_s/3*2}</izz>
          </inertia>
        </inertial>

        <collision name="sphere_collision">
          <geometry>
            <sphere>
              <radius>${r_s}</radius>
            </sphere>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0.8</mu>
              </ode>
            </friction>
          </surface>
        </collision>

        <visual name="sphere_visual">
          <geometry>
            <sphere>
              <radius>${r_s}</radius>
            </sphere>
          </geometry>
          <material>
            <script>
              <name>Gazebo/Black</name>
              <uri>file://media/materials/scripts/gazebo.material</uri>
            </script>
          </material>
        </visual>

        <gravity>true</gravity>
        <self_collide>true</self_collide>
        <kinematic>false</kinematic>
      </link>
    </gazebo>


    <!-- Joints -->

    <!-- Ball joint -->
    <gazebo>
      <joint name="spherical_joint" type="ball">
        <parent>dummy</parent>
        <child>sphere</child>
      </joint>
    </gazebo>

    <!-- Xsens Mti -->
    <!--   <xacro:include filename="$(find rezero_description)/urdf/xsens_mti.urdf.xacro"/>
      <xacro:xsens_mti name="imu" parent="base" ns="rezero" frame_id="/imu" topic_name="imu">
        <origin xyz="0.12 0.0 0.2" rpy="0 0 ${PI}"/>
      </xacro:xsens_mti> -->

    <link name="imu">
      <visual>
        <origin xyz="0 0 ${h_imu * 0.5}" rpy="0 0 0"/>
        <geometry>
          <box size="${l_imu} ${w_imu} ${h_imu}"/>
        </geometry>
        <material name="orange"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${h_imu * 0.5}" rpy="0 0 0"/>
        <geometry>
          <box size="${l_imu} ${w_imu} ${h_imu}"/>
        </geometry>
      </collision>
      <xacro:inertial_cuboid m="${m_imu}" w="${l_imu}" h="${h_imu}"
                             d="${w_imu}"/>
    </link>

    <joint name="imu_joint" type="fixed">
      <parent link="base"/>
      <child link="imu"/>
      <origin rpy="${imu_roll/180*PI} ${imu_pitch/180*PI} ${imu_yaw/180*PI}"
              xyz="${imu_x_pos} ${imu_y_pos} ${imu_z_pos}"/>
    </joint>

    <gazebo reference="imu">
      <selfCollide>true</selfCollide>
      <mu1 value="0.8"/>
      <material>Gazebo/Orange</material>
    </gazebo>

    <!-- The Safety Ring -->

    <link name="ring">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${base_params['ring']['d']}" radius="${base_params['ring']['r']}"/>
        </geometry>
        <material name="blue"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="${base_params['ring']['d']}" radius="${base_params['ring']['r']}"/>
        </geometry>
      </collision>
      <xacro:inertia_cyl_z mass="${base_params['ring']['mass']}" radius="${base_params['ring']['r']}" length="${base_params['ring']['d']}"/>
    </link>

    <joint name="ring_joint" type="fixed">
      <parent link="base"/>
      <child link="ring"/>
      <origin rpy="0 0 0" xyz="0 0 ${base_params['ring']['z']}"/>
    </joint>

    <gazebo reference="ring">
      <selfCollide>false</selfCollide>
      <mu1 value="0.8"/>
      <material>Gazebo/Blue</material>
    </gazebo>

    <!-- Plugin -->
    <gazebo>
      <!--
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
      </plugin>
      -->
      <plugin name="rezero_gazebo" filename="librezero_gazebo.so">
        <robotNamespace>rezero</robotNamespace> <!-- Currently not used -->
        <robotDescription>rezero_description</robotDescription>
        <robotBaseLink>base</robotBaseLink>
        <statePublisherRate>400.0</statePublisherRate>
      </plugin>

    </gazebo>
  </xacro:macro>

</robot>
